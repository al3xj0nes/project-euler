namespace project_euler.Solutions
{
    class Solution_02 : Solution
    {
        public override string ProblemDefinition =>
            "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\r\n" +
            "                                1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\r\n" +
            "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";

        public override string Answer =>
            $"Total Sum = {sumEvenFibVals()}";

        private int sumEvenFibVals()
        {
            int val1 = 1;
            int val2 = 2;
            int fibTest = 0;
            int sumEvenFibVals = 2; // Initialize with 2 as val2 (2) need to be added on initially.
            bool fourMilReached = false;
            while (!fourMilReached)
            {
                fibTest = val1 + val2;
                if (fibTest > 4000000)
                {
                    fourMilReached = true;
                }
                else
                {
                    val1 = val2;
                    val2 = fibTest;
                    if (fibTest % 2 == 0)
                    {
                        sumEvenFibVals += fibTest;
                        //addToOutput("SubTotal Sum = " + sumEvenFibVals + " by adding on " + fibTest);
                    }
                    else
                    {
                        //addToOutput("Skipped adding on " + fibTest + " as it's not even");
                    }
                }
            }
            return sumEvenFibVals;
        }
    }
}
